
R version 3.5.3 (2019-03-11) -- "Great Truth"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #install.packages("DBI")
> #install.packages("RMySQL")
> #install.packages("ggplot2")
> #install.packages("lubridate")
> 
> library(ggplot2)
> library(DBI)
> library(RMySQL)
> library(lubridate)

Attaching package: 'lubridate'

The following object is masked from 'package:base':

    date

> #Database Connection and Retrivieng Values
> #======================================================================
> #======================================================================
> con<-dbConnect(MySQL(),host="localhost",dbname="anildata",user="root",password="")
> result=dbSendQuery (con,"select * from temphum")
> data=fetch(result,n=-1)
> 
> #temperature=subset(data,select=c(temperature))
> #humidity=subset(data,select=c(humidity))
> 
> 
> #Function to sum totalValues like (temperature,humidity)
> #======================================================================
> #======================================================================
> #calcSum<-function(x)
> #{
>   #resultCalc<-(sum(x))
>  # return(resultCalc)
> #}
> #calcSum(temperature)
> #calcSum(humidity)
> 
> #tempVal=calcSum(data$temperature)
> #humVal=calcSum(data$humidity)
> #print(tempVal)
> #print(humVal)
> #print (mean(data$temperature))
> 
> #making data frames to write to database
> #======================================================================
> #======================================================================
> #temp.data<-data.frame(t=c(tempVal))
> #hum.data<-data.frame(t=c(humVal))
> 
> #dbWriteTable(con,"temp_sum", temp.data,overwrite=FALSE,append=TRUE)
> #dbWriteTable(con,"hum_sum", temp.data,overwrite=FALSE,append=TRUE)
> 
> 
> #plotingGraph humidityVsTemperature
> #======================================================================
> #======================================================================
> png("tempVshumidity.png")
> myplot=ggplot(data,aes(y = data$humidity,x = data$temperature)) + geom_line() +ggtitle("Temperature VS Humidity")
> print(myplot)
> dev.off()
null device 
          1 
> 
> 
> #Taking Month,Year,Day
> #======================================================================
> #======================================================================
> 
>   df$created_date<-as.Date(data$created_date)
>   df$Month<- months(df$created_date)
>   df$Year <- format(df$created_date,format="%y")
>   df$Day <- format(df$created_date,format="%d/%m/%y")
> 
> 
> 
> #Average temperature per year and month
> #======================================================================
> #======================================================================
> 
> avgTempMonth=aggregate(data$temperature ~ Month + Year , df , mean )
> print(avgTempMonth)
  Month Year data$temperature
1   May   19         24.39471
> dbWriteTable(con,"averagemonthtemp", avgTempMonth,overwrite=TRUE,append=FALSE)
[1] TRUE
> 
> #=====plot===========
> 
> result2=dbSendQuery (con,"select * from averagemonthtemp")
> dataMonthTemp=fetch(result2,n=-1)
> png("AvgtempMonthVstime.png")
> myplot3=barplot(dataMonthTemp$`data$temperature`,names.arg=dataMonthTemp$Month,xlab="Month",ylab="Temperature",col="blue",main="Temperature chart",border="black",ylim=c(0,50))
> print(myplot3)
     [,1]
[1,]  0.7
> dev.off()
null device 
          1 
> dbClearResult(result2)
[1] TRUE
> 
> #Average temperature per year and day and year
> #======================================================================
> #======================================================================
> 
> avgTempDay=aggregate(data$temperature ~ Month + Day+Year , df , mean )
> print(avgTempDay)
  Month      Day Year data$temperature
1   May 14/05/19   19         24.15686
2   May 15/05/19   19         24.96109
> dbWriteTable(con,"averagedaytemp", avgTempDay,overwrite=TRUE,append=FALSE)
[1] TRUE
> #=====plot===========
> 
> result3=dbSendQuery (con,"select * from averagedaytemp")
> dataDayTemp=fetch(result3,n=-1)
> png("AvgDayMonthTempVstime.png")
> myplot3=barplot(dataDayTemp$`data$temperature`,names.arg=dataDayTemp$Day,xlab="Day",ylab="Temperature",col="blue",main="Temperature chart",border="black",ylim=c(0,70))
> print(myplot3)
     [,1]
[1,]  0.7
[2,]  1.9
> dev.off()
null device 
          1 
> dbClearResult(result3)
[1] TRUE
> 
> 
> #Average humidity per year and month
> #======================================================================
> #======================================================================
> avgHumMonth=aggregate(data$humidity ~ Month + Year , df , mean )
> print(avgHumMonth)
  Month Year data$humidity
1   May   19      50.93441
> dbWriteTable(con,"averagehumiditymonth", avgHumMonth,overwrite=TRUE,append=FALSE)
[1] TRUE
> #=====plot===========
> result4=dbSendQuery (con,"select * from averagehumiditymonth")
> dataMonthHum=fetch(result4,n=-1)
> png("AvgHumidityMonthVstime.png")
> myplot=barplot(dataMonthHum$`data$humidity`,names.arg=dataMonthHum$Month,xlab="Month",ylab="Humidity",col="blue",main="Humidity chart",border="black",ylim=c(0,70))
> print(myplot)
     [,1]
[1,]  0.7
> dev.off()
null device 
          1 
> dbClearResult(result4)
[1] TRUE
> 
> #Average humidity per year and day and year
> #======================================================================
> #======================================================================
> 
> avgHumDay=aggregate(data$humidity ~ Month + Day+Year , df , mean )
> print(avgHumDay)
  Month      Day Year data$humidity
1   May 14/05/19   19      62.84150
2   May 15/05/19   19      22.57977
> dbWriteTable(con,"averagedayhum", avgHumDay,overwrite=TRUE,append=FALSE)
[1] TRUE
> #=====plot===========
> 
> result5=dbSendQuery (con,"select * from averagedayhum")
> dataDayHum=fetch(result5,n=-1)
> png("AvgHumidityDayMonthVstime.png")
> myplot=barplot(dataDayHum$`data$humidity`,names.arg=dataDayHum$Day,xlab="Day",ylab="Humidity",col="blue",main="Temperature chart",border="black",ylim=c(0,70))
> print(myplot)
     [,1]
[1,]  0.7
[2,]  1.9
> dev.off()
null device 
          1 
> dbClearResult(result5)
[1] TRUE
> 
> 
> #clear result set and closing connection with database
> #======================================================================
> #======================================================================
> dbClearResult(result)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
   1.07    0.25    1.54 
